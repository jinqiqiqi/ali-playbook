---

- name: "Copy zabbix repository file"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
  tags:
    - zabbix
  with_items:
    - { src: zabbix.repo, dest: /etc/yum.repos.d/zabbix.repo }

- name: "Install zabbix server packages"
  package:
    name: "{{ item }}"
    state: latest
  loop:
    - MySQL-python
    - mariadb-server
    - zabbix-server-mysql
    - zabbix-proxy-mysql
    - zabbix-web-mysql
    - zabbix-nginx-conf
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix

- name: "Start mariadb server"
  systemd:
    name: mariadb
    state: started
    daemon_reload: yes
    enabled: yes
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix

- name: "Start zabbix-server server"
  systemd:
    name: zabbix-server
    state: started
    daemon_reload: yes
    enabled: yes
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix

- name: "Start php-fpm server"
  systemd:
    name: php-fpm
    state: started
    daemon_reload: yes
    enabled: yes
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix


- name: "Start nginx server"
  systemd:
    name: nginx
    state: started
    daemon_reload: yes
    enabled: yes
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix

# - name: "Update root user for zabbix"
#   mysql_user:
#     name: "root"
#     password: "{{ zabbix_db_root_password }}"
#     state: present
#   tags:
#     - zabbix
#     - zabbix_db

- name: "Create database if zabbix database is not exist"
  mysql_db:
    name: "{{ zabbix_db_name }}"
    state: present
    encoding: "utf8"
    # login_host: "localhost"
    # login_user: root
    # login_password: "{{ zabbix_db_root_password }}"
  register: database_exists
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix
    - zabbix_db

- name: "Create a new database with name zabbix"
  mysql_db:
    name: "{{ zabbix_db_name }}"
    state: import
    encoding: "utf8"
    # login_host: "localhost"
    # login_user: root
    # login_password: "{{ zabbix_db_root_password }}"
    target: /usr/share/doc/zabbix-server-mysql-4.4.4/create.sql.gz
  when: inventory_hostname == zabbix_master and database_exists.changed
  # creates: /tmp/create.sql.gz
  tags:
    - zabbix
    - zabbix_db

- name: "Create database user for zabbix"
  mysql_user:
    name: "{{ zabbix_db_user }}"
    password: "{{ zabbix_db_password }}"
    state: present
    priv: "{{ zabbix_db_name }}.*:ALL"
    host: "localhost"
    # login_host: "localhost"
    # login_user: root
    # login_password: "{{ zabbix_db_root_password }}"
  when: inventory_hostname == zabbix_master
  tags:
    - zabbix
    - zabbix_db

- name: Replace items in zabbix config files
  lineinfile:
    dest: "/etc/zabbix/zabbix_server.conf"
    regexp: '{{ item.source }}'
    line: '{{ item.dest }}'
    backrefs: yes
  with_items: "{{ zabbix_server_config_lines }}"
  when: inventory_hostname == zabbix_master
  notify: restart zabbix
  tags:
    - zabbix
    - zabbix_db

- name: Replace items in php-fpm config files
  lineinfile:
    dest: "/etc/php-fpm.d/zabbix.conf"
    regexp: '{{ item.source }}'
    line: '{{ item.dest }}'
    backrefs: yes
  with_items: "{{ zabbix_phpfpm_config_lines }}"
  when: inventory_hostname == zabbix_master
  notify: restart php-fpm
  tags:
    - zabbix
    - zabbix_db

- name: Replace items in php-ini config files
  lineinfile:
    dest: "/etc/php.ini"
    regexp: '{{ item.source }}'
    line: '{{ item.dest }}'
    backrefs: yes
  with_items: "{{ zabbix_phpini_config_lines }}"
  when: inventory_hostname == zabbix_master
  notify: restart php-fpm
  tags:
    - zabbix
    - zabbix_db

- name: Replace items in nginx config files
  lineinfile:
    dest: "/etc/nginx/conf.d/zabbix.conf"
    regexp: '{{ item.source }}'
    line: '{{ item.dest }}'
    backrefs: yes
  with_items: "{{ zabbix_nginx_config_lines }}"
  when: inventory_hostname == zabbix_master
  notify: restart nginx
  tags:
    - zabbix
    - zabbix_db



# package installation for zabbix client


- name: "install zabbix client packages"
  package:
    name: "{{ item }}"
    state: latest
  loop:
    - zabbix-agent
  tags:
    - zabbix
    - zabbix-agent

- name: "Start zabbix-agent server"
  systemd:
    name: zabbix-agent
    state: started
    daemon_reload: yes
    enabled: yes
  tags:
    - zabbix
    - zabbix-agent

- name: "Replace items in zabbix-agent config files"
  lineinfile:
    dest: "/etc/zabbix/zabbix_agentd.conf"
    regexp: '{{ item.source }}'
    line: '{{ item.dest }}'
    backrefs: yes
  with_items: "{{ zabbix_agentd_config_lines }}"
  notify: restart zabbix-agent
  tags:
    - zabbix
    - zabbix-agent

- name: Allow zabbix agent related ports in INPUT chain
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    jump: ACCEPT
    action: insert
    comment: "zabbix agent related ports"
  loop: "{{ zabbix_agent_iptables_allow_ports }}"
  tags:
    - zabbix
    - zabbix-agent

# - name: Change to use custom DNS
#   lineinfile:
#     dest: "/etc/sysconfig/network-scripts/ifcfg-eth0"
#     regexp: '{{ item.regexp }}'
#     line: '{{ item.line }}'
#     create: yes
#   with_items: "{{ zabbix_dns_settings }}"
#   tags:
#     - zabbix
#     - zabbix-agent
#     - zabbix-network
#   notify: restart network

# - name: Switch to user
#   command: hostname
#   become_user: "{{ item.user }}"
#   args:
#     creates: /home/{{ item.user }}/.bash_profile
#   when: inventory_hostname != "bridge-00"
#   register: www_command
#   loop: "{{ zabbix_user_ssh_keys }}"
#   tags:
#     - zabbix
#     - zabbix-network
# 
# 
# - name: Add private key for www user
#   authorized_key:
#     user: "{{ item.user }}"
#     state: present
#     key: "{{ item.key }}"
#   when: inventory_hostname != "bridge-00"
#   loop: "{{ zabbix_user_ssh_keys }}"
#   tags:
#     - zabbix
#     - zabbix-network
# 