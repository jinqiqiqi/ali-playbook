image: h.eefocus.tech/devops/docker/ansible:latest

variables:
  CI_DEBUG_TRACE: "false"

services:
  - name: docker:stable-dind
    command: ["--insecure-registry=$CI_REGISTRY"]

stages:
  # - prepare
  - install
  
before_script:
  # - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  # - docker login -u ek -p ek "${CI_REGISTRY}"
  - mkdir -p ~/.ssh/eefocus/
  # - echo "$SSH_PRIVATE_KEY" > ~/.ssh/eefocus/id_rsa.ali.git
  # - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  # - mv .ansible.cfg.a ~/.ansible.cfg
  - echo "$SSH_ROOT_PRIVATE_KEY" > ~/.ssh/id_rsa
  - echo "$SSH_ROOT_PRIVATE_KEY" > ~/.ssh/eefocus/id_rsa.client
  - mv .ansible.cfg.d ~/.ansible.cfg
  - chmod 600  -Rf ~/.ssh
  - mv inventory ~/

# syntax_check:
#   # <<: *default_tags
#   stage: prepare
#   script:
#     - for job in `ls *.yml`; do ansible-playbook $job --syntax-check; done
  # only:
  #   - master
  # when: manual

nginx:
  stage: install
  script:
    - ansible-playbook nginx.yml dnsmasq.yml ocserv.yml openldap_auth.yml zabbix.yml rsyslog.yml -e addition="\"$CI_JOB_URL\""


# dnsmasq:
#   stage: install
#   script:
#     - ansible-playbook dnsmasq.yml -e addition="\"$CI_JOB_URL\""


# ocserv:
#   stage: install
#   script:
#     - ansible-playbook ocserv.yml -e addition="\"$CI_JOB_URL\""

# openldap_auth:
#   stage: install
#   script:
#     - ansible-playbook openldap_auth.yml -e addition="\"$CI_JOB_URL\""

# zabbix:
#   stage: install
#   script:
#     - ansible-playbook zabbix.yml -e addition="\"$CI_JOB_URL\""

# rsyslog:
#   stage: install
#   script:
#     - ansible-playbook rsyslog.yml -e addition="\"$CI_JOB_URL\""
#   